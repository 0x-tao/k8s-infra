apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: build-moji-
spec:
  entrypoint: main-steps
  arguments:
    parameters:
      - name: repo
        value: git@bitbucket.org:iMOTIF/moji.git
      - name: branch
        value: dev
      - name: image
        value: imotifdocker/odoo-moji:dev-{{workflow.uid}}

  volumeClaimTemplates:
    - metadata:
        name: work
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 5Gi

  volumes:
    - name: docker-config
      secret:
        secretName: docker-config
    - name: ssh-key
      secret:
        secretName: git-ssh-key

  templates:
    - name: main-steps
      steps:
        - - name: clone
            template: clone
            arguments:
              parameters:
                - name: repo
                  value: "{{workflow.parameters.repo}}"
                - name: branch
                  value: "{{workflow.parameters.branch}}"
        - - name: build-image
            template: build
            arguments:
              parameters:
                - name: path
                  value: .
                - name: image
                  value: "{{workflow.parameters.image}}"

    - name: clone
      inputs:
        parameters:
          - name: repo
          - name: branch
      container:
        image: alpine/git:latest
        command: [sh, -c]
        args:
          - |
            echo ">>> Setting up SSH"
            mkdir -p /root/.ssh
            cp /ssh/id_rsa /root/.ssh/id_rsa
            cp /ssh/known_hosts /root/.ssh/known_hosts
            chmod 600 /root/.ssh/id_rsa

            echo ">>> Cloning repo"
            git clone --depth 1 --branch {{inputs.parameters.branch}} --single-branch {{inputs.parameters.repo}} .
        volumeMounts:
          - mountPath: /work
            name: work
          - mountPath: /ssh
            name: ssh-key
            readOnly: true
        workingDir: /work

    - name: build
      inputs:
        parameters:
          - name: path
          - name: image
      container:
        image: gcr.io/kaniko-project/executor:latest
        volumeMounts:
          - name: work
            mountPath: /work
          - name: docker-config
            mountPath: /kaniko/.docker/
        workingDir: /work/{{inputs.parameters.path}}
        args:
          - --dockerfile=Dockerfile
          - --context=dir://.
          - --destination={{inputs.parameters.image}}
          - --cache=true

